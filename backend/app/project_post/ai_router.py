# ============================================================
# 📁 /app/project_post/ai_router.py
# ------------------------------------------------------------
# 프로젝트/스터디 생성 시 AI 설명 생성 기능
# - 사용자가 입력한 간단한 요약문을 바탕으로
#   기획서 형식의 프로젝트 설명(소개, 방식, 역할 등)을 자동 생성
# ============================================================

from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from openai import OpenAI
import os
from dotenv import load_dotenv

# ✅ .env 자동 로드
load_dotenv()

router = APIRouter(prefix="/ai", tags=["ai"])

# ============================================================
# 📦 Request 모델
# ============================================================
class PromptRequest(BaseModel):
    prompt: str


# ============================================================
# 🤖 프로젝트 설명 확장 API
# ------------------------------------------------------------
# POST /ai/expand
# ============================================================
@router.post("/expand")
def expand_description(req: PromptRequest):
    """
    사용자가 입력한 간단한 요약문(prompt)을 받아
    프로젝트 설명 형식에 맞게 자연스럽고 정돈된 문장을 생성합니다.
    """
    try:
        # ✅ 클라이언트는 요청 시점마다 새로 생성 (Windows 환경 안정화)
        client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

        # ✅ 벤치마킹 사이트 수준의 상세 서식
        system_prompt = """
너는 '프로젝트 모집 게시글 작성 보조 AI'야.
사용자가 50자 내외의 간단한 요약문을 입력하면,
아래와 같은 **기획서 형식**으로 완성도 높은 프로젝트 설명을 작성해줘.

출력 시 주의사항:
- 아래 번호 및 소제목 구조를 반드시 유지할 것.
- 문체는 자연스러운 서술형으로, 완성된 프로젝트 제안서처럼 작성.
- 각 항목은 2~5문장 정도로 구체적이고 읽기 쉽게 작성.
- 전체적으로 한글 맞춤법과 문장 흐름을 부드럽게 다듬기.

──────────────────────────────
📋 출력 형식 예시
──────────────────────────────

1. 프로젝트 소개

1) 시작 동기  
(프로젝트를 시작하게 된 배경과 문제의식, 사회적 필요성을 2~4문장으로 설명)

2) 만들고자 하는 서비스  
(어떤 기술을 활용하여 무엇을 만들지, 기능 요약과 차별점을 포함하여 설명)

3) 마일스톤  
- 1개월: 개발 환경 구성 및 기본 기능 구축  
- 2개월: 핵심 기능 개발  
- 3개월: 테스트 및 개선  
- 4개월: 서비스 베타 오픈

4) 추천 MVP 기능  
- 로그인 및 회원가입 기능  
- 게시판/댓글 기능  
- 실시간 채팅 또는 피드백 기능  
- 사용자 포트폴리오 공유 기능  

5) 타겟 사용자층  
(연령대, 직군, 관심사, 사용 목적 등 구체적으로 서술)

──────────────────────────────

2. 회의 진행 및 모임방식

1) 회의 빈도  
(예: 주 1회 정기회의 및 중간 점검)

2) 진행 방식  
(온라인/오프라인 병행 여부, 사용 협업 툴 등 상세히 기술)

──────────────────────────────

3. 나의 경험 및 역할

1) 현재까지 경험  
(참여자 본인의 관련 기술 경험, 프로젝트 이력 등을 2~3문장으로)

2) 프로젝트 내 역할  
(이번 프로젝트에서 맡을 구체적 역할, 기여 포인트를 작성)
──────────────────────────────

⚠️ 출력은 반드시 위 구조와 제목, 줄바꿈, 번호 형식을 그대로 유지해야 합니다.
"""

        completion = client.chat.completions.create(
            model="gpt-4o-mini",  # ✅ 성능/가격 균형
            temperature=0.7,      # ✅ 구조 고정성 향상
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": f"리더의 요약문: {req.prompt}"},
            ],
        )

        result = completion.choices[0].message.content.strip()
        return {"description": result}

    except Exception as e:
        import traceback, sys
        print("🔥 AI Error:\n", traceback.format_exc(), file=sys.stderr, flush=True)
        raise HTTPException(status_code=500, detail=str(e))
